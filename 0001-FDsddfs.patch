From 9d2f0c8700d9ed6dcf33ab65f7f90335f4945238 Mon Sep 17 00:00:00 2001
From: Karl Cheng <karl@canva.com>
Date: Tue, 26 Apr 2022 18:26:34 +1000
Subject: [PATCH] FDsddfs :wq

---
 internal/node/node_patches.js | 17 ++++++++++-------
 1 file changed, 10 insertions(+), 7 deletions(-)

diff --git a/internal/node/node_patches.js b/internal/node/node_patches.js
index 360bff24..56e60fbe 100644
--- a/internal/node/node_patches.js
+++ b/internal/node/node_patches.js
@@ -492,6 +492,13 @@ exports.isOutPath = isOutPath;
 const escapeFunction = (roots) => {
     // ensure roots are always absolute
     roots = roots.map(root => path__default['default'].resolve(root));
+    // Returns true if in any root and false if outside all roots.
+    function isInRoot(linkPath) {
+        return roots.some(
+            root => !isOutPath(root, linkPath)
+        );
+    }
+
     function isEscape(linkTarget, linkPath) {
         if (!path__default['default'].isAbsolute(linkPath)) {
             linkPath = path__default['default'].resolve(linkPath);
@@ -499,13 +506,9 @@ const escapeFunction = (roots) => {
         if (!path__default['default'].isAbsolute(linkTarget)) {
             linkTarget = path__default['default'].resolve(linkTarget);
         }
-        for (const root of roots) {
-            if (isOutPath(root, linkTarget) && !isOutPath(root, linkPath)) {
-                // don't escape out of the root
-                return true;
-            }
-        }
-        return false;
+
+        // don't escape out of the root
+        return !isInRoot(root, linkTarget) && isInRoot(root, linkPath);
     }
     return { isEscape, isOutPath };
 };
-- 
2.35.1

